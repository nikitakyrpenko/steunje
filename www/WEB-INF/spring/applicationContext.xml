<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:aop="http://www.springframework.org/schema/aop"
		xmlns:tx="http://www.springframework.org/schema/tx"
		xsi:schemaLocation="http://www.springframework.org/schema/beans
							http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
							http://www.springframework.org/schema/context
                			http://www.springframework.org/schema/context/spring-context.xsd
							http://www.springframework.org/schema/aop
							http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
							http://www.springframework.org/schema/tx
							http://www.springframework.org/schema/tx/spring-tx-2.0.xsd">
  <import resource="applicationContext-cache.xml"/>
  <import resource="applicationContext-aop.xml"/>
  <bean id="dbHelperDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
    <property name="url" value="${jdbc.url}"/>
    <property name="username" value="${jdbc.username}"/>
    <property name="password" value="${jdbc.password}"/>
    <property name="driverClassName" value="org.postgresql.Driver"/>
    <property name="maxActive" value="15"/>
    <property name="maxIdle" value="15"/>
    <property name="validationQuery" value="select 1"/>
    <property name="maxWait" value="10000"/>
    <property name="removeAbandoned" value="true"/>
    <property name="removeAbandonedTimeout" value="1"/>
  </bean>

  <bean id="dbHelperSessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
    <property name="cacheableMappingLocations" ref="mappingLocations"/>
    <property name="hibernateProperties">
      <props>
        <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
        <prop key="hibernate.show_sql">false</prop>
        <prop key="hibernate.cache.use_second_level_cache">false</prop>
        <!--prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop-->
        <!--prop key="hibernate.hbm2ddl.auto">update</prop-->
      </props>
    </property>
    <property name="dataSource" ref="dbHelperDataSource"/>
  </bean>

  <bean id="dbHelperDataSourceInitializer" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod" value="com.negeso.framework.domain.DBHelper.setDataSource"/>
    <property name="arguments"><list><ref local="dbHelperDataSource"/></list></property>
  </bean>

  <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod" value="com.negeso.framework.domain.DBHelper.setSessionFactory"/>
    <property name="arguments"><list><ref local="dbHelperSessionFactory"/></list></property>
  </bean>

  <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
    <property name="cacheableMappingLocations" ref="mappingLocations"/>
    <property name="hibernateProperties">
      <props>
        <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
        <prop key="hibernate.show_sql">true</prop>
        <prop key="hibernate.format_sql">true</prop>
        <prop key="hibernate.use_sql_comments">true</prop>
        <prop key="hibernate.cache.use_second_level_cache">false</prop>
        <!--prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop-->
      </props>
    </property>
    <property name="dataSource" ref="dataSource"/>
  </bean>

  <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
    <property name="url" value="${jdbc.url}"/>
    <property name="username" value="${jdbc.username}"/>
    <property name="password" value="${jdbc.password}"/>
    <property name="driverClassName" value="org.postgresql.Driver"/>
    <property name="maxActive" value="15"/>
    <property name="maxIdle" value="15"/>
    <property name="validationQuery" value="select 1"/>
    <property name="maxWait" value="10000"/>
    <property name="removeAbandoned" value="true"/>
    <property name="removeAbandonedTimeout" value="1"/>
  </bean>
  
  <bean id="mappingLocations" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean" depends-on="dbHelperDataSourceInitializer">
    <property name="staticMethod" value="com.negeso.framework.module.engine.ModuleEngine.getAllocatedHibernateConfigs"/>
  </bean>
  
  <bean id="appStopListener" class="com.negeso.framework.ShutdownNotifier" destroy-method="shutdown"/>

  <bean id="placeholderConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="location" value="/WEB-INF/conf.txt"/>
  </bean>

  <bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
    <property name="cookieName" value="interface_language"/>
  </bean>

  <bean id="parameterDao" class="com.negeso.module.core.dao.HibernateParameterDao">
	<property name="sessionFactory">
		<ref bean="sessionFactory"/>
	</property>
  </bean>	

  <bean id="parameterService" class="com.negeso.module.core.service.ParameterService">
    <property name="dao">
		<ref bean="parameterDao"/>     
    </property>
  </bean>

  <bean id="moduleDao" class="com.negeso.module.core.dao.HibernateModuleDao">
	<property name="sessionFactory">
		<ref bean="sessionFactory"/>
	</property>
  </bean>
  	
  <bean id="centralModulesProviderClient" class="com.negeso.framework.module.ws.CentralModulesProviderClient">
    <constructor-arg value="${ws.central_modules.url}"/>
  </bean>
  
 <bean id="moduleService" class="com.negeso.module.core.service.ModuleService">
    <property name="moduleDao">
		<ref bean="moduleDao"/>
    </property>
    <property name="centralModulesProviderClient" ref="centralModulesProviderClient"/>
    <property name="siteIdentifier" value="${ws.site.identifier}"/>
 </bean>

  <bean id="environmentInitializer" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod" value="com.negeso.framework.Env.setParameterService"/>
    <property name="arguments"><ref local = "parameterService"/></property>
  </bean>


  <bean id="siteInitializer" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod" value="com.negeso.framework.site.Site.setParameterService"/>
    <property name="arguments"><ref local = "parameterService"/></property>
  </bean>
  

  <bean id="bandwidthUpdaterInitializer" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod" value="com.negeso.module.media_catalog.command.StreamingBandwidthUpdater.setParameterService"/>
    <property name="arguments"><ref local = "parameterService"/></property>
  </bean>


	<bean id="bandwidthUpdater" class="com.negeso.module.media_catalog.command.StreamingBandwidthUpdater">
	</bean>

	<bean id="scheduledTask" class="org.springframework.scheduling.timer.ScheduledTimerTask">
<!--	   wait 1000 seconds before starting repeated execution -->
	  <property name="delay">
	    <value>1000000</value>
	  </property>
<!--	   run every 10 seconds -->
	  <property name="period">
	    <value>43200000</value>
	  </property>
	  <property name="timerTask">
	    <ref local="bandwidthUpdater"/>
	  </property>
	</bean>

	<bean id="timerFactory" class="org.springframework.scheduling.timer.TimerFactoryBean">
	  <property name="scheduledTimerTasks">
	    <list>
	      <ref local="scheduledTask"/>
	    </list>
	  </property>
	</bean>

    <!-- common DAO beans -->
    <bean id="finderIntroductionAdvisor" class="com.negeso.framework.dao.finder.impl.FinderIntroductionAdvisor">
        <constructor-arg>
            <bean class="com.negeso.framework.dao.finder.impl.FinderIntroductionInterceptor"/>
        </constructor-arg>
    </bean>
    <bean id="simpleFinderNamingStrategy" class="com.negeso.framework.dao.finder.impl.SimpleFinderNamingStrategy" />
    <bean id="simpleFinderArgumentTypeFactory" class="com.negeso.framework.dao.finder.impl.SimpleFinderArgumentTypeFactory" />
    
    <bean id="abstractDaoTarget" class="com.negeso.framework.dao.impl.GenericDaoHibernateImpl" abstract="true">
        <property name="sessionFactory">
            <ref bean="sessionFactory"/>
        </property>
        <property name="namingStrategy">
            <ref bean="simpleFinderNamingStrategy" />
        </property>
        <property name="argumentTypeFactory">
            <ref bean="simpleFinderArgumentTypeFactory" />
        </property>
    </bean>

    <bean id="abstractDao" class="org.springframework.aop.framework.ProxyFactoryBean" abstract="true">
        <property name="interceptorNames">
            <list>
                <value>finderIntroductionAdvisor</value>
            </list>
        </property>
    </bean>    

    <bean id="sessionTemplate" class="com.negeso.framework.dao.SessionTemplate">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

	<bean id="hibernateTransactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
	    <property name="sessionFactory" ref="sessionFactory"/>
	</bean>

	<bean id="jdbcTransactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>

	<bean id="abstractJdbcTxDefinition"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"
		abstract="true">
		<property name="transactionManager" ref="jdbcTransactionManager" />
		<property name="transactionAttributes">
			<props>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>
    
   	<bean id="abstractCachable"
		class="com.negeso.framework.cache.AbstractCachable"
		abstract="true" init-method="init">
	</bean>
	
	<bean id="applicationContextProvider" 
		class="com.negeso.framework.ApplicationContextProvider"/>		
	
	<bean id="menuService"
		class="com.negeso.framework.menu.service.MenuService">
		<property name="menuDao" ref="menuDao" />
	</bean>
	
	<bean id="menuDao" parent="abstractDao">
		<property name="proxyInterfaces" value="com.negeso.framework.menu.dao.MenuDao" />
		<property name="target">
			<bean parent="abstractDaoTarget">
				<constructor-arg value="com.negeso.framework.menu.bo.Menu" />
			</bean>
		</property>
	</bean>
	
	<bean id="i18nCorePropertyDao" parent="abstractDao">
        <property name="proxyInterfaces">
            <value>com.negeso.module.core.dao.I18nCorePropertyDao</value>
        </property>
        <property name="target">
            <bean parent="abstractDaoTarget">
                <constructor-arg>
                    <value>com.negeso.module.core.domain.I18nCoreProperty</value>
                </constructor-arg>
            </bean>
        </property>
    </bean>
    
    <bean id="i18nCorePropertyService"
        class="com.negeso.module.core.service.I18nCorePropertyService">
        <property name="i18nCorePropertyDao" ref="i18nCorePropertyDao" />
    </bean>
	
</beans>
